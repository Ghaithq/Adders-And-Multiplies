module sequentialMultiplier(
  input wire [31:0] operand_a,
  input wire [31:0] operand_b,
  input wire clk,
  input wire rst,
  output wire [63:0] result
);

  reg [4:0] count; // Counter for 32 bits
  reg [63:0] product_reg; // Accumulator for the result

  always @(posedge clk or posedge rst) begin
    if (rst) begin
      count <= 0;
      product_reg <= 0;
    end else begin
      if (count < 32) begin
        // Shift and add for each bit
        if (operand_a[count]) begin
          product_reg <= product_reg + (operand_b << count);
        end
        count <= count + 1;
      end
    end
    
  end
  endmodule